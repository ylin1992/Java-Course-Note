<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1634113911643' version='4.1.4' timestamp='1634113899290'><Project projectName='greatest-common-divisor'><Jar>/Users/ewan/Projects/Java/Java_course/Module3/lesson2/_23_ExerciseSPotBugs/starter/greatest-common-divisor/target/classes</Jar><SrcDir>/Users/ewan/Projects/Java/Java_course/Module3/lesson2/_23_ExerciseSPotBugs/starter/greatest-common-divisor/src/main/java</SrcDir><WrkDir>/Users/ewan/Projects/Java/Java_course/Module3/lesson2/_23_ExerciseSPotBugs/starter/greatest-common-divisor/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='59906b8c977a7fa94d4ae65ff25cf96' rank='14' abbrev='HE' category='BAD_PRACTICE' priority='1' type='HE_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage><LongMessage>com.udacity.spotbugs.SpotBugsErrors defines equals and uses Object.hashCode()</LongMessage><Class classname='com.udacity.spotbugs.SpotBugsErrors' primary='true'><SourceLine classname='com.udacity.spotbugs.SpotBugsErrors' start='5' end='29' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java'><Message>At SpotBugsErrors.java:[lines 5-29]</Message></SourceLine><Message>In class com.udacity.spotbugs.SpotBugsErrors</Message></Class><Method isStatic='false' classname='com.udacity.spotbugs.SpotBugsErrors' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='139' classname='com.udacity.spotbugs.SpotBugsErrors' start='26' end='29' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='0'></SourceLine><Message>In method com.udacity.spotbugs.SpotBugsErrors.equals(Object)</Message></Method><SourceLine synthetic='true' endBytecode='139' classname='com.udacity.spotbugs.SpotBugsErrors' start='26' end='29' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='0'><Message>At SpotBugsErrors.java:[lines 26-29]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b8ccfd08f4646cb64dbff3e4588c2380' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>com.udacity.spotbugs.SpotBugsErrors.method() concatenates strings using + in a loop</LongMessage><Class classname='com.udacity.spotbugs.SpotBugsErrors' primary='true'><SourceLine classname='com.udacity.spotbugs.SpotBugsErrors' start='5' end='29' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java'><Message>At SpotBugsErrors.java:[lines 5-29]</Message></SourceLine><Message>In class com.udacity.spotbugs.SpotBugsErrors</Message></Class><Method isStatic='false' classname='com.udacity.spotbugs.SpotBugsErrors' signature='()V' name='method' primary='true'><SourceLine endBytecode='208' classname='com.udacity.spotbugs.SpotBugsErrors' start='13' end='22' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='0'></SourceLine><Message>In method com.udacity.spotbugs.SpotBugsErrors.method()</Message></Method><SourceLine endBytecode='29' classname='com.udacity.spotbugs.SpotBugsErrors' start='18' end='18' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='29' primary='true'><Message>At SpotBugsErrors.java:[line 18]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 1.5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugPattern abbrev='HE' category='BAD_PRACTICE' type='HE_EQUALS_USE_HASHCODE'><ShortDescription>Class defines equals() and uses Object.hashCode()</ShortDescription><Details>

  &lt;p&gt; This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not
  override &lt;code&gt;hashCode()&lt;/code&gt;, and inherits the implementation of
  &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&amp;nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.&lt;/p&gt;

&lt;p&gt;If you don't think instances of this class will ever be inserted into a HashMap/HashTable,
the recommended &lt;code&gt;hashCode&lt;/code&gt; implementation to use is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public int hashCode() {
    assert false : "hashCode not designed";
    return 42; // any arbitrary constant will do
}
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><BugCode abbrev='HE'><Description>Equal objects must have equal hashcodes</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='3' total_classes='3' priority_1='1' priority_2='1' total_size='31' clock_seconds='2.04' referenced_classes='17' vm_version='11.0.7+10' total_bugs='2' java_version='11.0.7' gc_seconds='0.01' alloc_mbytes='512.00' cpu_seconds='7.22' peak_mbytes='195.26' timestamp='Wed, 13 Oct 2021 16:31:39 +0800'><FileStats path='com/udacity/App.java' size='6' bugCount='0'></FileStats><FileStats path='com/udacity/gcd/GreatestCommonDivisorCalculator.java' size='7' bugCount='0'></FileStats><FileStats path='com/udacity/spotbugs/SpotBugsErrors.java' size='18' bugHash='a0ab110fa9ff4aade8ffea45c67ffdc0' bugCount='2'></FileStats><PackageStats package='com.udacity' total_bugs='0' total_size='6' total_types='1'><ClassStats bugs='0' size='6' interface='false' sourceFile='App.java' class='com.udacity.App'></ClassStats></PackageStats><PackageStats package='com.udacity.gcd' total_bugs='0' total_size='7' total_types='1'><ClassStats bugs='0' size='7' interface='false' sourceFile='GreatestCommonDivisorCalculator.java' class='com.udacity.gcd.GreatestCommonDivisorCalculator'></ClassStats></PackageStats><PackageStats package='com.udacity.spotbugs' priority_1='1' total_bugs='2' priority_2='1' total_size='18' total_types='1'><ClassStats bugs='2' size='18' priority_1='1' priority_2='1' interface='false' sourceFile='SpotBugsErrors.java' class='com.udacity.spotbugs.SpotBugsErrors'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='1474' totalMilliseconds='561' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='21607' standardDeviationMicrosecondsPerInvocation='2841' invocations='381'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='246' totalMilliseconds='94' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='8833' standardDeviationMicrosecondsPerInvocation='478' invocations='383'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5320' totalMilliseconds='90' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='22822' standardDeviationMicrosecondsPerInvocation='7703' invocations='17'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='197' totalMilliseconds='68' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='3419' standardDeviationMicrosecondsPerInvocation='418' invocations='348'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='991' totalMilliseconds='58' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='5935' standardDeviationMicrosecondsPerInvocation='1022' invocations='59'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3408' totalMilliseconds='57' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='22840' standardDeviationMicrosecondsPerInvocation='5458' invocations='17'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1302' totalMilliseconds='48' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='24822' standardDeviationMicrosecondsPerInvocation='4160' invocations='37'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='6572' totalMilliseconds='46' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='43847' standardDeviationMicrosecondsPerInvocation='15219' invocations='7'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2110' totalMilliseconds='35' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='13039' standardDeviationMicrosecondsPerInvocation='3348' invocations='17'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1722' totalMilliseconds='29' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='8926' standardDeviationMicrosecondsPerInvocation='2526' invocations='17'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>